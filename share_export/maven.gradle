apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    println("上传代码到maven仓库源码路径：${android.sourceSets.main.java.getSrcDirs()}")
    from android.sourceSets.main.java.getSrcDirs() // 源码路径
    archiveClassifier = "sources"
}

afterEvaluate {
    publishing {
        // 配置maven仓库 仓库地址可配置多个 执行publish任务时 会把aar包发步到所有指定的maven仓库
        repositories { RepositoryHandler handler ->

            if (!isRemoteAar.toBoolean()) {
                //执行命令 右侧 gradle -> xxx-xxx[common-module] -> Tasks -> publishing -> publish
                // 指定路径的本地仓库
                handler.mavenLocal()
                handler.maven {
                    url "${rootDir}/repo"
                }
            } else {
                // 远程仓库
                handler.maven { MavenArtifactRepository mavenArtifactRepository ->
                    name = "GitHubPackages"
                    // maven 仓库地址
                    url = uri(mavenUrl)
                    // 访问仓库的 账号和密码
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                }
            }
        }
        publications { PublicationContainer publicationContainer ->
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release // 注释1:使用 Android Gradle 插件生成的组件，作为发布的内容
//                artifact sourceJar // 上传源码
                // Library Package Name (Example : "com.frogobox.androidfirstlib")
                // NOTE : Different GroupId For Each Library / Module, So That Each Library Is Not Overwritten
                groupId = 'ren.nearby.share_export'
                // Library Name / Module Name (Example : "androidfirstlib")
                // NOTE : Different ArtifactId For Each Library / Module, So That Each Library Is Not Overwritten
                artifactId = 'share-export'
                // Version Library Name (Example : "1.0.0")
                version = '1.0.0'

                //指定路径 share_export-release.aar
//                artifact "build/outputs/aar/${project.getName()}-release.aar"
            }
        }
    }
}